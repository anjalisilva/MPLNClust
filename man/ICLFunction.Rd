% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mplnModelSelection.R
\name{ICLFunction}
\alias{ICLFunction}
\title{Model Selection Via Integrated Completed Likelihood}
\usage{
ICLFunction(
  logLikelihood,
  nParameters,
  nObservations,
  clusterRunOutput,
  gmax,
  gmin,
  parallel = FALSE
)
}
\arguments{
\item{logLikelihood}{A vector with value of final log-likelihoods for
each cluster size.}

\item{nParameters}{A vector with number of parameters for each
cluster size.}

\item{nObservations}{A positive integer specifying the number of observations
in the dataset analyzed.}

\item{clusterRunOutput}{Output from MPLNClust::mplnVariational,
MPLNClust::mplnMCMCParallel, or MPLNClust::mplnMCMCNonParallel functions.
This is required.}

\item{gmax}{A positive integer, > gmin, specifying the maximum number of
components to be considered in the clustering run.}

\item{gmin}{A positive integer specifying the minimum number of components
to be considered in the clustering run.}

\item{parallel}{TRUE or FALSE indicating if MPLNClust::mplnMCMCParallel
has been used.}
}
\value{
Returns an S3 object of class MPLN with results.
\itemize{
\item allICLvalues - A vector of ICL values for each cluster size.
\item ICLmodelselected - An integer specifying model selected by ICL.
\item ICLmodelSelectedLabels - A vector of integers specifying cluster labels
for the model selected. Only provided if user input clusterRunOutput.
\item ICLMessage - A character vector indicating if spurious clusters are
detected. Otherwise, NA.
}
}
\description{
Performs model selection using integrated completed likelihood (ICL) by
Biernacki et al., (2000). Require the output from function MPLNClust::BICFunction.
}
\examples{
# Generating simulated data
# Not run
# trueMu1 <- c(6.5, 6, 6, 6, 6, 6)
# trueMu2 <- c(2, 2.5, 2, 2, 2, 2)

# trueSigma1 <- diag(6) * 2
# trueSigma2 <- diag(6)

# sampleData <- MPLNClust::mplnDataGenerator(nObservations = 100,
#                                 dimensionality = 6,
#                                 mixingProportions = c(0.79, 0.21),
#                                 mu = rbind(trueMu1, trueMu2),
#                                 sigma = rbind(trueSigma1, trueSigma2),
#                                 produceImage = "No")
#
# Clustering
# mplnResults <- MPLNClust::mplnVariational(dataset = sampleData$dataset,
#                                membership = sampleData$trueMembership,
#                                gmin = 1,
#                                gmax = 2,
#                                initMethod = "kmeans",
#                                nInitIterations = 2,
#                                normalize = "Yes")
#
# Model selection
# ICLmodel <- MPLNClust::ICLFunction(logLikelihood = mplnResults$logLikelihood,
#                         nParameters = mplnResults$numbParameters,
#                         nObservations = nrow(mplnResults$dataset),
#                         clusterRunOutput = mplnResults$allResults,
#                         gmin = mplnResults$gmin,
#                         gmax = mplnResults$gmax,
#                         parallel = FALSE)

}
\references{
Biernacki, C., G. Celeux, and G. Govaert (2000). Assessing a mixture model for
clustering with the integrated classification likelihood. \emph{IEEE Transactions
on Pattern Analysis and Machine Intelligence} 22.
}
\author{
{Anjali Silva, \email{anjali.silva@uhnresearch.ca}}
}
