% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mplnVisualize.R
\name{mplnVisualize}
\alias{mplnVisualize}
\title{Visualize Clustered Results Via MPLN}
\usage{
mplnVisualize(
  dataset,
  plots = "all",
  probabilities = NA,
  clusterMembershipVector = NA,
  fileName = paste0("Plot_", date()),
  LinePlotColours = "black",
  format = "pdf"
)
}
\arguments{
\item{dataset}{A dataset of class matrix and type integer such that
rows correspond to observations and columns correspond to variables.}

\item{plots}{A character string indicating which plots to be produced.
Options are 'heatmaps', 'lines', 'bar', and 'all'. Default is 'all'.}

\item{probabilities}{A matrix of size N x C, such that rows correspond
to N observations and columns correspond to C clusters. Each row
should sum to 1. Default is NA.}

\item{clusterMembershipVector}{A numeric vector of length nrow(dataset)
containing the cluster membership of each observation as generated by
mpln(). Default is NA.}

\item{fileName}{Unique character string indicating the name for the plot
being generated. Default is Plot_date, where date is obtained from
date().}

\item{LinePlotColours}{Character string indicating if the line plots
should be multicoloured or monotone, in black. Options are
'multicolour' or 'black'. Default is 'black'.}

\item{format}{Character string indicating the format of the image to
be produced. Default 'pdf'. Options 'pdf' or 'png'.}
}
\value{
Plotting function provides the possibility for line and heatmap
plots.
}
\description{
A function to visualize data and clustering results obtained
from a mixtures of multivariate Poisson-log normal (MPLN) model.
The function produces heatmaps and line plots of input data.
If cluster membership of observations are provided, this
information will be indicated in the figures. If a matrix of
probabilities for the observations belonging to each cluster
is provided, the option to produce a barplot of probabilities
is also available.
}
\examples{
# Generating simulated data
# Not run
# trueMu1 <- c(6.5, 6, 6, 6, 6, 6)
# trueMu2 <- c(2, 2.5, 2, 2, 2, 2)

# trueSigma1 <- diag(6) * 2
# trueSigma2 <- diag(6)

# simulatedCounts <- mplnDataGenerator(nObservations = 70,
#                                      dimensionality = 6,
#                                      mixingProportions = c(0.79, 0.21),
#                                      mu = rbind(trueMu1, trueMu2),
#                                      sigma = rbind(trueSigma1, trueSigma2),
#                                      produceImage = "No")

# MPLNClustResults <- mplnParallel(dataset = simulatedCounts$dataset,
#                                  membership = "none",
#                                  gmin = 2,
#                                  gmax = 2,
#                                  nChains = 3,
#                                  nIterations = 200,
#                                  initMethod = "kmeans",
#                                  nInitIterations = 0,
#                                  normalize = "Yes")

# MPLNVisuals <- mplnVisualize(dataset = simulatedCounts$dataset,
#                              plots = 'all',
#                              clusterMembershipVector =
#                              MPLNClustResults$all_results[[1]]$all_results$clusterlabels,
#                              fileName = 'TwoClusterModel',
#                              format = 'png')

}
\author{
Anjali Silva, \email{anjali.silva@uhnresearch.ca}
}
