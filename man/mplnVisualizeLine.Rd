% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mplnVisualize.R
\name{mplnVisualizeLine}
\alias{mplnVisualizeLine}
\title{Visualize Clustered Results Via MPLN}
\usage{
mplnVisualizeLine(
  dataset,
  clusterMembershipVector = NA,
  fileName = paste0("Plot_", date()),
  LinePlotColours = "black",
  printPlot = TRUE,
  format = "pdf"
)
}
\arguments{
\item{dataset}{A dataset of class matrix and type integer such that
rows correspond to observations and columns correspond to variables.}

\item{clusterMembershipVector}{A numeric vector of length nrow(dataset)
containing the cluster membership of each observation as generated by
mpln(). Default is NA.}

\item{fileName}{Unique character string indicating the name for the plot
being generated. Default is Plot_date, where date is obtained from
date().}

\item{LinePlotColours}{Character string indicating if the line plots
should be multicoloured or monotone, in black. Options are
'multicolour' or 'black'. Default is 'black'.}

\item{printPlot}{Logical indicating if plot(s) should be saved in local
directory. Default TRUE. Options TRUE or FALSE.}

\item{format}{Character string indicating the format of the image to
be produced. Default 'pdf'. Options 'pdf' or 'png'.}
}
\value{
Plotting function provides the possibility for line and heatmap
plots.
}
\description{
A function to visualize data and clustering results obtained
from a mixtures of multivariate Poisson-log normal (MPLN) model.
The function produces heatmaps and line plots of input data.
If cluster membership of observations are provided, this
information will be indicated in the figures. If a matrix of
probabilities for the observations belonging to each cluster
is provided, the option to produce a barplot of probabilities
is also available.
}
\examples{
# Example 1
# Setting parameters
trueMu1 <- c(6.5, 6, 6, 6, 6, 6)
trueMu2 <- c(2, 2.5, 2, 2, 2, 2)

trueSigma1 <- diag(6) * 2
trueSigma2 <- diag(6)

# Generate simulated data
simulatedCounts <- MPLNClust::mplnDataGenerator(nObservations = 100,
                                      dimensionality = 6,
                                      mixingProportions = c(0.79, 0.21),
                                      mu = rbind(trueMu1, trueMu2),
                                      sigma = rbind(trueSigma1, trueSigma2),
                                      produceImage = "No")

 # Clustering data
 MPLNClustResults <- MPLNClust::mplnVariational(
                              dataset = as.matrix(simulatedCounts$dataset),
                              membership = "none",
                              gmin = 1,
                              gmax = 2,
                              initMethod = "kmeans",
                              nInitIterations = 1,
                              normalize = "Yes")

 # Visualize data using line plot
 MPLNVisuals <- MPLNClust::mplnVisualizeLine(dataset = simulatedCounts$dataset,
                                         clusterMembershipVector =
                                         MPLNClustResults$allResults$`G=2`$clusterlabels,
                                         fileName = 'TwoClusterModel',
                                         printPlot = FALSE,
                                         format = 'png')

 # Visualize data using line plot with multicolours
 # Use navigation buttons to see previous plots
 MPLNVisuals <- MPLNClust::mplnVisualizeLine(dataset = simulatedCounts$dataset,
                                         clusterMembershipVector =
                                         MPLNClustResults$allResults$`G=2`$clusterlabels,
                                         fileName = 'TwoClusterModel',
                                         LinePlotColours = "multicolour",
                                         printPlot = FALSE,
                                         format = 'png')

 # Example 2
 # Carry out K-means clustering for same dataset as above
 # Use navigation buttons to see previous plots
 set.seed(1234)
 MPLNVisuals <- MPLNClust::mplnVisualizeLine(dataset = simulatedCounts$dataset,
                                         clusterMembershipVector = kmeans(simulatedCounts$dataset, 3)$cluster,
                                         fileName = 'ThreeClusterKmeansModel',
                                         LinePlotColours = "multicolour",
                                         printPlot = FALSE,
                                         format = 'png')

}
\author{
Anjali Silva, \email{a.silva@utoronto.ca}
}
